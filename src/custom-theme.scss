// Custom Theming for Angular Material
// For more information: https://material.angular.io/guide/theming
@use "@angular/material" as mat;
@use "sass:map";
@use "sass:color";
// Plus imports for other components in your app.

// Import centralized animations
@use "animations";

// Include the common styles for Angular Material. We include this here so that you only
// have to load a single css file for Angular Material in your app.
// Be sure that you only ever include this mixin once!
@include mat.elevation-classes();
@include mat.app-background();

// Adwaita Green Primary Palette
$adwaita-green-palette: (
  50: #f0faf2,
  100: #d8f5e0,
  200: #b8f0c8,
  300: #8ff0a4,
  // green-1
  400: #57e389,
  // green-2
  500: #33d17a,
  // green-3
  600: #2ec27e,
  // green-4
  700: #26a269,
  // green-5
  800: #1e8a57,
  900: #167345,
  contrast: (
    50: rgba(black, 0.87),
    100: rgba(black, 0.87),
    200: rgba(black, 0.87),
    300: rgba(black, 0.87),
    400: rgba(black, 0.87),
    500: white,
    // Green-3 works with dark text
    600: white,
    700: white,
    800: white,
    900: white,
  ),
);

// Adwaita Blue Accent Palette
$adwaita-blue-palette: (
  50: #f0f7ff,
  100: #d8ebff,
  200: #b8d9ff,
  300: #99c1f1,
  // blue-1
  400: #62a0ea,
  // blue-2
  500: #3584e4,
  // blue-3
  600: #1c71d8,
  // blue-4
  700: #1a5fb4,
  // blue-5
  800: #154d90,
  900: #103b6c,
  contrast: (
    50: rgba(black, 0.87),
    100: rgba(black, 0.87),
    200: rgba(black, 0.87),
    300: rgba(black, 0.87),
    400: rgba(black, 0.87),
    500: white,
    600: white,
    700: white,
    800: white,
    900: white,
  ),
);

// Adwaita Red Warn Palette
$adwaita-red-palette: (
  50: #ffebee,
  100: #ffcdd2,
  200: #faa7a0,
  300: #f66151,
  // red-1
  400: #ed333b,
  // red-2
  500: #e01b24,
  // red-3
  600: #c01c28,
  // red-4
  700: #a51d2d,
  // red-5
  800: #8b1522,
  900: #700e17,
  contrast: (
    50: rgba(black, 0.87),
    100: rgba(black, 0.87),
    200: rgba(black, 0.87),
    300: rgba(black, 0.87),
    400: white,
    500: white,
    600: white,
    700: white,
    800: white,
    900: white,
  ),
);

// Yellow Palette
$adwaita-yellow-palette: (
  50: #fffdf0,
  100: #fff9d8,
  200: #fff5b8,
  300: #f9f06b,
  // yellow-1
  400: #f8e45c,
  // yellow-2
  500: #f6d32d,
  // yellow-3
  600: #f5c211,
  // yellow-4
  700: #e5a50a,
  // yellow-5
  800: #d38f00,
  900: #b57900,
  contrast: (
    50: rgba(black, 0.87),
    100: rgba(black, 0.87),
    200: rgba(black, 0.87),
    300: rgba(black, 0.87),
    400: rgba(black, 0.87),
    500: rgba(black, 0.87),
    600: rgba(black, 0.87),
    700: white,
    800: white,
    900: white,
  ),
);

// Orange Palette
$adwaita-orange-palette: (
  50: #fff8f0,
  100: #ffebd8,
  200: #ffddb8,
  300: #ffbe6f,
  // orange-1
  400: #ffa348,
  // orange-2
  500: #ff7800,
  // orange-3
  600: #e66100,
  // orange-4
  700: #c64600,
  // orange-5
  800: #a53500,
  900: #842500,
  contrast: (
    50: rgba(black, 0.87),
    100: rgba(black, 0.87),
    200: rgba(black, 0.87),
    300: rgba(black, 0.87),
    400: rgba(black, 0.87),
    500: white,
    600: white,
    700: white,
    800: white,
    900: white,
  ),
);

// Purple Palette
$adwaita-purple-palette: (
  50: #faf0fa,
  100: #f0d8f0,
  200: #e8b8e8,
  300: #dc8add,
  // purple-1
  400: #c061cb,
  // purple-2
  500: #9141ac,
  // purple-3
  600: #813d9c,
  // purple-4
  700: #613583,
  // purple-5
  800: #4f2a6a,
  900: #3d1f51,
  contrast: (
    50: rgba(black, 0.87),
    100: rgba(black, 0.87),
    200: rgba(black, 0.87),
    300: rgba(black, 0.87),
    400: white,
    500: white,
    600: white,
    700: white,
    800: white,
    900: white,
  ),
);

// Brown Palette
$adwaita-brown-palette: (
  50: #f7f2ed,
  100: #ede0d8,
  200: #e0c8b8,
  300: #cdab8f,
  // brown-1
  400: #b5835a,
  // brown-2
  500: #986a44,
  // brown-3
  600: #865e3c,
  // brown-4
  700: #63452c,
  // brown-5
  800: #513821,
  900: #3f2b16,
  contrast: (
    50: rgba(black, 0.87),
    100: rgba(black, 0.87),
    200: rgba(black, 0.87),
    300: rgba(black, 0.87),
    400: white,
    500: white,
    600: white,
    700: white,
    800: white,
    900: white,
  ),
);

// Light (Gray) Palette
$adwaita-light-palette: (
  50: #ffffff,
  // light-1
  100: #f6f5f4,
  // light-2
  200: #deddda,
  // light-3
  300: #c0bfbc,
  // light-4
  400: #9a9996,
  // light-5
  500: #77767b,
  // dark-1
  600: #5e5c64,
  // dark-2
  700: #3d3846,
  // dark-3
  800: #241f31,
  // dark-4
  900: #000000,
  // dark-5
  contrast: (
      50: rgba(black, 0.87),
      100: rgba(black, 0.87),
      200: rgba(black, 0.87),
      300: rgba(black, 0.87),
      400: white,
      500: white,
      600: white,
      700: white,
      800: white,
      900: white,
    ),
);

$adwaita-theme-colors: (
  yellow: mat.m2-define-palette($adwaita-yellow-palette, 500, 400, 700),
  orange: mat.m2-define-palette($adwaita-orange-palette, 500, 400, 700),
  purple: mat.m2-define-palette($adwaita-purple-palette, 500, 400, 700),
  brown: mat.m2-define-palette($adwaita-brown-palette, 500, 400, 700),
  light: mat.m2-define-palette($adwaita-light-palette, 200, 100, 300),
  dark: mat.m2-define-palette($adwaita-light-palette, 700, 500, 900),
);

// Function to get additional colors
@function adwaita-color($color-name, $hue: default) {
  @return mat.get-color-from-palette(map.get($adwaita-theme-colors, $color-name), $hue);
}

// Then use it in your theme:
$rclone-manager-warn: mat.m2-define-palette($adwaita-red-palette, 600, 500, 800);

// Use the custom palettes
$rclone-manager-primary: mat.m2-define-palette($adwaita-green-palette);

$rclone-manager-accent: mat.m2-define-palette($adwaita-blue-palette);

// Create the theme object. A theme consists of configurations for individual
// theming systems such as "color" or "typography".
$rclone-manager-theme: mat.m2-define-light-theme(
  (
    color: (
      primary: $rclone-manager-primary,
      accent: $rclone-manager-accent,
      warn: $rclone-manager-warn,
    ),
    typography: mat.m2-define-typography-config(),
    density: 0,
  )
);

// Define the palettes for the dark theme
$rclone-manager-dark-primary: mat.m2-define-palette($adwaita-green-palette);
$rclone-manager-dark-accent: mat.m2-define-palette($adwaita-blue-palette);
$rclone-manager-dark-warn: mat.m2-define-palette($adwaita-red-palette, 600, 500, 800);

// Create the dark theme object
$rclone-manager-dark-theme: mat.m2-define-dark-theme(
  (
    color: (
      primary: $rclone-manager-dark-primary,
      accent: $rclone-manager-dark-accent,
      warn: $rclone-manager-dark-warn,
    ),
    typography: mat.m2-define-typography-config(),
    density: 0,
  )
);

.light {
  @include mat.all-component-colors($rclone-manager-theme);

  & {
    /* Define custom colors for light mode */
    --app-background: #fafafa;
    --secondary-background: #ffffff;
    --banner-background: #d4d4d7; //rgba(212, 212, 215, 0.85);
    --sidebar-background: #f5f5f5;
    --box-shadow: 0 0 0 1px rgba(232, 232, 233, 1), 0 0 4px 1px rgba(10, 10, 11, 0.06);
    --selected-tab-color: #e6e6e7;
    --hover-color: rgb(200, 200, 200);
    --app-text-color: #000000;
    --secondary-text-color: #939090;
    --button-hover: #dddddd;
    --theme-border: #dbdbdb;
    --faint-blue: #f0f8ff;
    --about-dialog-button-color: #ffffff;

    /* Define rgb variables for colors */
    --app-background-rgb: 250, 250, 250;
    --secondary-background-rgb: 255, 255, 255;
    --app-text-color-rgb: 0, 0, 0;
    --secondary-text-color-rgb: 147, 144, 144;
  }
}

/* ðŸŒ™ Dark Theme */

.dark {
  @include mat.all-component-colors($rclone-manager-dark-theme);
  & {
    /* Define custom colors for dark mode */
    --app-background: #222226;
    --secondary-background: #000000;
    --banner-background: #3d3d42; // rgba(61, 61, 66, 0.85);
    --sidebar-background: #050505;
    --box-shadow: 0 0 0 1px rgba(32, 32, 36, 1), 0 0 4px 1px rgba(0, 0, 0, 0.06);
    --selected-tab-color: #2f2f30;
    --hover-color: rgb(55, 55, 55);
    --app-text-color: #ffffff;
    --secondary-text-color: #939090;
    --button-hover: #333;
    --theme-border: #555;
    --faint-blue: #464d50;
    --about-dialog-button-color: #333337;

    /* Define rgb variables for colors */
    --app-background-rgb: 34, 34, 38;
    --secondary-background-rgb: 0, 0, 0;
    --app-text-color-rgb: 255, 255, 255;
    --secondary-text-color-rgb: 147, 144, 144;
  }
}

:root {
  --accent-color-rgb:
    #{color.channel(map.get($adwaita-blue-palette, 500), "red", $space: rgb)},
    #{color.channel(map.get($adwaita-blue-palette, 500), "green", $space: rgb)},
    #{color.channel(map.get($adwaita-blue-palette, 500), "blue", $space: rgb)};
  --warn-color-rgb:
    #{color.channel(map.get($adwaita-red-palette, 400), "red", $space: rgb)},
    #{color.channel(map.get($adwaita-red-palette, 400), "green", $space: rgb)},
    #{color.channel(map.get($adwaita-red-palette, 400), "blue", $space: rgb)};
  --primary-color-rgb:
    #{color.channel(map.get($adwaita-green-palette, 500), "red", $space: rgb)},
    #{color.channel(map.get($adwaita-green-palette, 500), "green", $space: rgb)},
    #{color.channel(map.get($adwaita-green-palette, 500), "blue", $space: rgb)};
  --purple-rgb:
    #{color.channel(map.get($adwaita-purple-palette, 500), "red", $space: rgb)},
    #{color.channel(map.get($adwaita-purple-palette, 500), "green", $space: rgb)},
    #{color.channel(map.get($adwaita-purple-palette, 500), "blue", $space: rgb)};
  --orange-rgb:
    #{color.channel(map.get($adwaita-orange-palette, 500), "red", $space: rgb)},
    #{color.channel(map.get($adwaita-orange-palette, 500), "green", $space: rgb)},
    #{color.channel(map.get($adwaita-orange-palette, 500), "blue", $space: rgb)};
  --yellow-rgb:
    #{color.channel(map.get($adwaita-yellow-palette, 500), "red", $space: rgb)},
    #{color.channel(map.get($adwaita-yellow-palette, 500), "green", $space: rgb)},
    #{color.channel(map.get($adwaita-yellow-palette, 500), "blue", $space: rgb)};
  --light-green-rgb:
    #{color.channel(map.get($adwaita-green-palette, 300), "red", $space: rgb)},
    #{color.channel(map.get($adwaita-green-palette, 300), "green", $space: rgb)},
    #{color.channel(map.get($adwaita-green-palette, 300), "blue", $space: rgb)};
  --light-orange-rgb:
    #{color.channel(map.get($adwaita-orange-palette, 300), "red", $space: rgb)},
    #{color.channel(map.get($adwaita-orange-palette, 300), "green", $space: rgb)},
    #{color.channel(map.get($adwaita-orange-palette, 300), "blue", $space: rgb)};
  --light-blue-rgb:
    #{color.channel(map.get($adwaita-blue-palette, 300), "red", $space: rgb)},
    #{color.channel(map.get($adwaita-blue-palette, 300), "green", $space: rgb)},
    #{color.channel(map.get($adwaita-blue-palette, 300), "blue", $space: rgb)};
  --red-rgb:
    #{color.channel(map.get($adwaita-red-palette, 500), "red", $space: rgb)},
    #{color.channel(map.get($adwaita-red-palette, 500), "green", $space: rgb)},
    #{color.channel(map.get($adwaita-red-palette, 500), "blue", $space: rgb)};
  --light-theme-color-rgb:
    #{color.channel(map.get($adwaita-light-palette, 50), "red", $space: rgb)},
    #{color.channel(map.get($adwaita-light-palette, 50), "green", $space: rgb)},
    #{color.channel(map.get($adwaita-light-palette, 50), "blue", $space: rgb)};
  --dark-theme-color-rgb:
    #{color.channel(map.get($adwaita-light-palette, 900), "red", $space: rgb)},
    #{color.channel(map.get($adwaita-light-palette, 900), "green", $space: rgb)},
    #{color.channel(map.get($adwaita-light-palette, 900), "blue", $space: rgb)};

  --accent-color: #{map.get($adwaita-blue-palette, 500)};
  --warn-color: #{map.get($adwaita-red-palette, 500)};
  --primary-color: #{map.get($adwaita-green-palette, 500)};
  --purple: #{map.get($adwaita-purple-palette, 500)};
  --orange: #{map.get($adwaita-orange-palette, 500)};
  --yellow: #{map.get($adwaita-yellow-palette, 500)};
  --light-green: #{map.get($adwaita-green-palette, 300)};
  --light-orange: #{map.get($adwaita-orange-palette, 300)};
  --light-blue: #{map.get($adwaita-blue-palette, 300)};
  --light-purple: #{map.get($adwaita-purple-palette, 300)};
  --light-yellow: #{map.get($adwaita-yellow-palette, 300)};
  --red: #{map.get($adwaita-red-palette, 500)};
  --light-theme-color: #{map.get($adwaita-light-palette, 50)};
  --dark-theme-color: #{map.get($adwaita-light-palette, 900)};

  --onboarding-background:
    radial-gradient(circle at 20% 50%, rgba(var(--primary-color-rgb), 0.5) 0%, transparent 50%),
    radial-gradient(circle at 80% 20%, rgba(var(--accent-color-rgb), 0.5) 0%, transparent 50%),
    radial-gradient(circle at 40% 80%, rgba(var(--primary-color-rgb), 0.5) 0%, transparent 50%),
    linear-gradient(
      135deg,
      rgba(var(--app-background-rgb), 0.9) 0%,
      rgba(var(--secondary-background-rgb), 0.9) 100%
    );

  /* ===== DESIGN SYSTEM TOKENS ===== */

  /* Spacing Scale */
  --space-xxs: 4px; // Extra small padding, gaps
  --space-xs: 8px; // Small padding, gaps
  --space-sm: 12px; // Medium padding, gaps
  --space-md: 16px; // Default spacing unit
  --space-lg: 20px; // Large spacing
  --space-xl: 24px; // Extra large spacing
  --space-2xl: 32px; // Section spacing

  /* Border Radius Scale */
  --radius-xxs: 4px; // Extra small elements (small buttons, icons)
  --radius-xs: 8px; // Small elements (inputs, small buttons)
  --radius-sm: 12px; // Medium elements (cards, panels, buttons)
  --radius-md: 16px; // Large elements (modals, containers)
  --radius-lg: 24px; // Special elements (usage bars)

  /* Component-specific Aliases (mapped to scale) */
  --border-radius: var(--radius-xs); // 8px
  --button-border-radius: var(--radius-sm); // 12px
  --input-border-radius: var(--radius-sm); // 12px - Border radius for input fields
  --card-border-radius: var(--radius-sm); // 12px
  --panel-radius: var(--radius-sm); // 12px
  --modal-radius: var(--radius-md); // 16px
  --title-bar-radius: var(--radius-md); // 16px
  --home-bottom-radius: var(--radius-md); // 16px
  --icon-radius: var(--radius-md); // 16px
  --item-radius: var(--radius-sm); // 12px
  --badge-radius: var(--radius-sm); // 12px
  --status-radius: var(--radius-sm); // 12px
  --usage-bar-radius: var(--radius-lg); // 24px
  --card-border-radius-large: var(--radius-md); // 16px
  --tab-bar-bottom-radius: 0px; // Special case
  --divider-radius: 1px; // Special case

  /* Spacing Aliases (mapped to scale) */
  --title-bar-padding: var(--space-xs); // 8px
  --banner-padding: var(--space-sm); // 12px
  --item-padding: var(--space-md); // 16px
  --content-gap: var(--space-lg); // 20px
  --container-padding: var(--space-xl); // 24px
  --header-gap: var(--space-md); // 16px
  --button-gap: var(--space-md); // 16px
  --panel-gap: var(--space-xl); // 24px
  --container-gap: var(--space-2xl); // 32px
  --modal-gap: var(--space-xl); // 24px
  --section-gap: var(--space-2xl); // 32px
  --legend-gap: var(--space-xl); // 24px

  /* Padding Aliases */
  --panel-padding: var(--space-xl); // 24px
  --modal-padding: var(--space-2xl); // 32px
  --content-padding: var(--space-2xl); // 32px
  --step-padding: var(--space-md); // 16px
  --button-padding: var(--space-md) 28px; // 16px 28px
  --panel-header-padding: var(--space-2xl) var(--space-2xl) var(--space-md) var(--space-2xl);
  --panel-content-padding: var(--space-xl) var(--space-2xl) var(--space-2xl) var(--space-2xl);
  --panel-actions-padding: var(--space-md) var(--space-xl);

  /* Mobile Responsive */
  --panel-padding-mobile: var(--space-md); // 16px
  --modal-padding-mobile: var(--space-xl); // 24px
  --section-gap-mobile: var(--space-lg); // 20px
  --legend-gap-mobile: var(--space-sm); // 12px

  /* Layout Constants */
  --titlebar-height: 40px;
  --sidebar-width: 250px;
  --status-bar-height: 48px;
  --app-height: calc(100vh - (var(--titlebar-height) + var(--title-bar-padding)));

  /* Global UI Variables */
  --border-color: rgba(var(--app-text-color-rgb), 0.08);
  --text-muted: rgba(var(--app-text-color-rgb), 0.7);
  --bg-elevated: rgba(var(--app-text-color-rgb), 0.03);
  --button-background: rgba(var(--app-text-color-rgb), 0.04);
  --bg-hover: rgba(var(--app-text-color-rgb), 0.05);
  --selected-border: var(--accent-color);
  --disabled-fade: rgba(var(--app-text-color-rgb), 0.5);
  --surface-overlay: rgba(var(--app-text-color-rgb), 0.03);

  .modal-header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    font-weight: bold;
    padding: var(--space-xs);
    gap: var(--space-xs);

    p {
      display: flex;
      align-items: center;
      gap: var(--space-xs);
    }
  }
}

html,
body {
  height: 100%;
  --mat-menu-container-shape: 16px;
  scrollbar-width: thin;
  scrollbar-color: rgba(128, 128, 128, 0.5) transparent;
}

body {
  margin: 0;
  font-family: system-ui, Inter, sans-serif;
  overflow: hidden;
}

* {
  user-select: none;
  cursor: default;
  transition:
    background 0.5s ease,
    background-color 0.5s ease,
    color 0.05s ease;
  -webkit-user-drag: none;
}

input,
textarea,
[contenteditable="true"] {
  user-select: text;
  cursor: text;
}

p,
h1,
h2,
h3,
h4,
h5,
h6 {
  margin-bottom: 0;
  margin-top: 0;
}

.mat-mdc-raised-button,
.mat-mdc-icon-button,
.mat-mdc-icon-button .mat-mdc-button-persistent-ripple,
.mat-mdc-raised-button .mdc-button__ripple,
.mat-mdc-button,
.mat-mdc-unelevated-button,
.mat-mdc-outlined-button {
  border-radius: var(--button-border-radius) !important;
}

// Fix for mat-icon overflow issues in Windows
mat-icon {
  overflow: visible !important;
}

button {
  border: none;
  display: flex;
  align-items: center;
  flex-direction: row !important;
  justify-content: center;
  background-color: transparent;
  color: var(--app-text-color);

  span {
    text-wrap: nowrap;
    display: flex;
    flex-direction: row;
    gap: var(--space-xs);
  }

  &.fix {
    color: white !important;
    background-color: var(--orange) !important;
  }

  &.edit,
  &.back {
    color: white !important;
    background-color: var(--purple) !important;
  }
}

.mat-mdc-menu-item-text {
  display: flex;
  justify-content: space-between;
  gap: var(--space-sm);
}

.mat-mdc-menu-panel {
  background-color: var(--app-background) !important;
  border-radius: var(--radius-sm) !important;
}

.mat-mdc-menu-item {
  color: var(--app-text-color) !important;
  min-height: 30px !important;
  width: calc(100% - 12px) !important;
  margin: var(--space-xxs) !important;
  border-radius: var(--radius-xs) !important;
  padding-inline: 10px !important;

  &:hover {
    background-color: var(--button-hover) !important;
  }
}

.mat-mdc-dialog-container .mdc-dialog__surface {
  border-radius: var(--radius-md) !important;
  color: var(--app-text-color) !important;
  background-color: var(--app-background) !important;
}

.mdc-text-field--filled:not(.mdc-text-field--disabled) {
  background-color: var(--faint-blue) !important;
}

.cdk-overlay-pane,
.cdk-overlay-dark-backdrop {
  border-radius: var(--title-bar-radius) !important;
}

.mat-bottom-sheet-container {
  box-shadow: none !important;
  border-radius: var(--title-bar-radius) var(--title-bar-radius) 0 0 !important;

  @media (max-width: 960px) {
    border-radius: var(--title-bar-radius) !important;
  }
}

// ===== FORM FIELDS =====
.mat-mdc-form-field {
  width: 100%;
}

/* ===== ICON SIZES ===== */
:root {
  // Icon size scale
  --icon-size-xs: 14px; // Small inline icons
  --icon-size-sm: 18px; // Status icons
  --icon-size-md: 24px; // Default icon size (buttons, etc.)
  --icon-size-lg: 32px; // Large icons
  --icon-size-xl: 48px; // Extra large icons (overview cards)
  --icon-container-size: 64px; // Icon container size

  // Legacy aliases (for backward compatibility)
  --small-icon-size: var(--icon-size-xs); // 14px
  --status-icon-size: var(--icon-size-sm); // 18px
  --medium-icon-size: var(--icon-size-md); // 24px
  --large-icon-size: var(--icon-size-lg); // 32px
  --icon-size: var(--icon-size-md); // 24px (default)
  --icon-size-small: var(--icon-size-xs); // 14px
  --icon-size-medium: var(--icon-size-md); // 24px
  --icon-size-large: var(--icon-size-xl); // 48px
  --icon-size-mobile: 20px; // Mobile-optimized

  /* ===== TYPOGRAPHY SCALE ===== */
  // Font sizes
  --font-size-3xl: 2rem; // 32px
  --font-size-2xl: 1.5rem; // 24px
  --font-size-xl: 1.25rem; // 20px
  --font-size-base: 1rem; // 16px
  --font-size-md: 0.875rem; // 14px
  --font-size-sm: 0.75rem; // 12px
  --caption-font-size: 0.75rem; // 12px - for captions and labels

  /* ===== OPACITY SCALE ===== */
  --panel-hover-opacity: 0.1;
  --background-opacity: 0.05;
  --border-opacity: 0.05;
  --hover-opacity: 0.03;
  --active-opacity: 0.1;
  --inactive-opacity: 0.02;
  --legend-opacity: 0.15;

  /* ===== TRANSITION SCALE ===== */
  --transition-instant: all 0.1s ease;
  --transition-fast: all 0.2s ease;
  --transition-standard: all 0.3s ease;
  --transition-slow: all 0.5s ease;
  --transition-cubic: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
  --transition-bounce: all 0.4s cubic-bezier(0.68, -0.55, 0.265, 1.55);

  // Legacy aliases
  --default-transition: var(--transition-standard);
  --quick-transition: var(--transition-fast);
  --usage-transition: var(--transition-slow);
  --transition-quick: var(--transition-fast);

  /* ===== SHADOW SCALE ===== */
  --shadow-light: 0 4px 24px rgba(0, 0, 0, 0.08), 0 2px 8px rgba(0, 0, 0, 0.04);
  --shadow-elevated: 0 8px 32px rgba(0, 0, 0, 0.12), 0 4px 16px rgba(0, 0, 0, 0.08);

  /* ===== COMPONENT-SPECIFIC VARIABLES ===== */
  --action-btn-scale: 0.85;
  --action-btn-scale-hover: 0.9;
  --action-btn-scale-active: 0.82;
  --action-btn-scale-disabled: 0.8;
}

/* ===== RESPONSIVE ADJUSTMENTS ===== */
@media (max-width: 768px) {
  :root {
    --button-padding: var(--space-sm) var(--space-md); // 12px 16px
    --step-padding: var(--space-sm); // 12px
  }
}

@media (max-width: 480px) {
  :root {
    --button-padding: var(--space-xs) var(--space-sm); // 8px 12px
    --step-padding: var(--space-xs); // 8px
  }
}
