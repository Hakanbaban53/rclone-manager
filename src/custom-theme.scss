// Custom Theming for Angular Material
// For more information: https://material.angular.io/guide/theming
@use "@angular/material" as mat;
// Plus imports for other components in your app.

// Include the common styles for Angular Material. We include this here so that you only
// have to load a single css file for Angular Material in your app.
// Be sure that you only ever include this mixin once!
@include mat.core();

// Define the palettes for your theme using the Material Design palettes available in palette.scss
// (imported above). For each palette, you can optionally specify a default, lighter, and darker
// hue. Available color palettes: https://material.io/design/color/
$rclone-manager-primary: mat.define-palette(mat.$indigo-palette);
$rclone-manager-accent: mat.define-palette(mat.$pink-palette, A200, A100, A400);

// The warn palette is optional (defaults to red).
$rclone-manager-warn: mat.define-palette(mat.$red-palette);

// Create the theme object. A theme consists of configurations for individual
// theming systems such as "color" or "typography".
$rclone-manager-theme: mat.define-light-theme(
  (
    color: (
      primary: $rclone-manager-primary,
      accent: $rclone-manager-accent,
      warn: $rclone-manager-warn,
    ),
    typography: mat.define-typography-config(),
    density: 0,
  )
);

// Include theme styles for core and each component used in your app.
// Alternatively, you can import and @include the theme mixins for each component
// that you are using.
@include mat.all-component-themes($rclone-manager-theme);

.light {

  /* Define custom colors for light mode */
  --app-background: #ffffff;
  --semi-transparent-background: rgba(255, 255, 255, 0.8);
  --shadow-color: rgba(0, 0, 0, 0.32);
  --hover-color: rgb(200, 200, 200);
  --app-text-color: #000000;
  --secodary-text-color: #939090;
  --border-color: #cfcfcf;
  --button-background: #f5f5f5;
  --button-text: #000000;
  --button-hover: #dddddd;
  --add-button-background: #dbdbdb;
  --add-button-hover: #939090;
  --theme-border: #dbdbdb;
  --theme-border-hover: #777;
  --selected-border: #007bff;
  --light-theme-color: white;
  --dark-theme-color: black;
  --green: #5CB85C;
  --orange: #F89F24;
  --red: #FF0000;
  --blue: #2196F3;
  --purple: #9747FF;
}

/* ðŸŒ™ Dark Theme */
.dark {

  /* Define custom colors for dark mode */
  --app-background: #000000;
  --semi-transparent-background: rgba(30, 30, 30, 0.8);
  --shadow-color: rgba(255, 255, 255, 0.32);
  --hover-color: rgb(55, 55, 55);
  --app-text-color: #ffffff;
  --secodary-text-color: #939090;
  --border-color: #808080;
  --button-background: #333;
  --button-text: #ffffff;
  --button-hover: #444;
  --add-button-background: #444;
  --add-button-hover: #666;
  --theme-border: #555;
  --theme-border-hover: #888;
  --selected-border: #007bff;
  --light-theme-color: white;
  --dark-theme-color: black;
  --green: #5CB85C;
  --orange: #F89F24;
  --red: #FF0000;
  --blue: #2196F3;
  --purple: #9747FF;
}

:root {
  --border-radius: 8px;
  --title-bar-padding: 8px;
  --titlebar-height: 40px; // Adjust this value to match your title bar height
  --titlebar-border: 1px;
  --sidebar-width: 250px;
  --app-height: calc(100vh - (var(--titlebar-height) + var(--title-bar-padding) + var(--titlebar-border)));
}

html,
body {
  height: 100%;
  --mat-menu-container-shape: 16px;
}
body {
  margin: 0;
  font-family: Roboto, "Helvetica Neue", sans-serif;
}

p, h1, h2, h3, h4, h5, h6 {
  transition: color 0.3 ease;
  margin-bottom: 0;
  margin-top: 0;

  .icon-bw {
    .dark & {
      filter: invert(1);
    }

    .light & {
      filter: invert(0);
    }
  }
}

button {
  cursor: pointer;
  padding: 6px 12px;
  border: none;
  border-radius: var(--border-radius);
  font-size: 20px;
  display: flex;
  align-items: center;
  justify-content: center;
  gap: 6px;
  background-color: transparent;
  color: white;

  img {
    cursor: pointer;

    &.icon-bw {
      .dark & {
        filter: invert(1);
      }

      .light & {
        filter: invert(0);
      }
    }
  }

  &.mount,
  &.finish {
    background-color: var(--green);
  }
  
  &.fix {
    background-color: var(--orange);
  }


  &.open,
  &.next {
    background-color: var(--blue);
  }

  &.unmount {
    background-color: var(--red);
  }

  &.edit,
  &.back {
    background-color: var(--purple);
  }

  &:disabled {
    background-color: var(--button-background);
    color: var(--button-text);
    cursor: not-allowed;
  }

}

.mat-mdc-menu-item-text {
  display: flex;
  justify-content: space-between;
  --mat-menu-item-label-text-size: 16px;
}
.mat-mdc-menu-panel {
  transition: background-color 0.3s ease-in-out !important;
  min-width: 252px !important;
  min-height: 230px;
  background-color: var(--app-background) !important;
}

.mat-mdc-menu-item {
  transition: background-color 0.3s ease-in-out, color 0.3s ease-in-out !important;
  color: var(--app-text-color) !important;
  min-height: 36px !important;
  width: calc(100% - 12px) !important;
  margin: 6px !important;

  &:hover {
    background-color: var(--button-hover) !important;
  }
}

.mat-divider {
  border-color: var(--border-color) !important;
}

.mat-mdc-card-subtitle {
  color: var(--titlebar-text-color) !important;
}

.icons {
  width: 24px;
  height: 24px;
}

.icon {
  width: 20px;
  height: 20px;
}

/* Disable text selection and use default cursor */
* {
  user-select: none;
  cursor: default;
  transition: background-color 0.3s ease;
  // transition: color 100ms ease;
  -webkit-user-drag: none; /* Disable image dragging in WebKit browsers */
}

/* Allow text selection and normal text cursor inside inputs */
input, textarea, [contenteditable="true"] {
  user-select: text;
  cursor: text;
}

.mat-mdc-dialog-container .mdc-dialog__surface {
  border-radius: 24px !important;
  color: var(--app-text-color) !important;
  background-color: var(--app-background) !important;
}

.mdc-text-field--filled:not(.mdc-text-field--disabled) {
  background-color: #ECF9FF !important;
}

.cdk-overlay-dark-backdrop {
  background: var(--shadow-color) !important;
  border-radius: var(--border-radius) !important;
}